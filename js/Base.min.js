var Base=function(){};Base.extend=function(_instance,_static){var extend=Base.prototype.extend;Base._prototyping=!0;var proto=new this;extend.call(proto,_instance);proto.base=function(){};delete Base._prototyping;var constructor=proto.constructor,klass=proto.constructor=function(){if(!Base._prototyping)if(this._constructing||this.constructor==klass){this._constructing=!0;constructor.apply(this,arguments);delete this._constructing}else if(arguments[0]!=null)return(arguments[0].extend||extend).call(arguments[0],proto)};klass.ancestor=this;klass.extend=this.extend;klass.forEach=this.forEach;klass.implement=this.implement;klass.prototype=proto;klass.toString=this.toString;klass.valueOf=function(type){return type=="object"?klass:constructor.valueOf()};extend.call(klass,_static);typeof klass.init=="function"&&klass.init();return klass};Base.prototype={extend:function(source,value){if(arguments.length>1){var ancestor=this[source];if(ancestor&&typeof value=="function"&&(!ancestor.valueOf||ancestor.valueOf()!=value.valueOf())&&/\bbase\b/.test(value)){var method=value.valueOf();value=function(){var previous=this.base||Base.prototype.base;this.base=ancestor;var returnValue=method.apply(this,arguments);this.base=previous;return returnValue};value.valueOf=function(type){return type=="object"?value:method};value.toString=Base.toString}this[source]=value}else if(source){var extend=Base.prototype.extend;!Base._prototyping&&typeof this!="function"&&(extend=this.extend||extend);var proto={toSource:null},hidden=["constructor","toString","valueOf"],i=Base._prototyping?0:1;while(key=hidden[i++])source[key]!=proto[key]&&extend.call(this,key,source[key]);for(var key in source)proto[key]||extend.call(this,key,source[key])}return this}};Base=Base.extend({constructor:function(){this.extend(arguments[0])}},{ancestor:Object,version:"1.1",forEach:function(object,block,context){for(var key in object)this.prototype[key]===undefined&&block.call(context,object[key],key,object)},implement:function(){for(var i=0;i<arguments.length;i++)typeof arguments[i]=="function"?arguments[i](this.prototype):this.prototype.extend(arguments[i]);return this},toString:function(){return String(this.valueOf())}});