function _call(func){if(func&&"function"==typeof func){undefined===func.id&&(func.id=Math.round((new Date).getTime()*1e3)+""+Math.round(Math.random()*1e3));_globals[func.id]=func;return"_doCall('"+func.id+"')"}return""}function _doCall(call_id){var func=_globals[call_id];func?func():console.error("No call for id",call_id)}var _ruleCtrl=null,_globals={};$(document).ready(function(){_ruleCtrl=new RuleController;_ruleCtrl.fetchRules()});var Rule=Base.extend({name:"",description:"",constructor:function(json){this.id="id"in json?json.id:"";this.name="name"in json?json.name:"";this.description="description"in json?json.description:""},check:function(sender){var self=this;$(sender).attr("disabled",!0);$.ajax("rules/"+self.id+"/run",{success:function(json){console.log(json);json;$(sender).removeAttr("disabled")},error:function(jqXHR,textStatus,errorThrown){alert("Failed to run rule "+self.name+": "+errorThrown);$(sender).removeAttr("disabled")}})}}),RuleController=Base.extend({loaded:!1,rules:[],fetchRules:function(){var self=this;$.get("rules/",function(json){if(json){var rls=[];for(var i=0;i<json.length;i++)rls.push(new Rule(json[i]));self.rules=rls;self.loaded=!0;self.showRules()}else{alert('Invalid response for "rules/"');console.log("rules",json)}},"json")},showRules:function(){$("#rules").html("templates/rules.ejs",{rules:this.rules})}});