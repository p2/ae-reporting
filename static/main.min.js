function _call(e){if(e&&"function"==typeof e){undefined===e.id&&(e.id=Math.round((new Date).getTime()*1e3)+""+Math.round(Math.random()*1e3));_globals[e.id]=e;return"_doCall(this, '"+e.id+"')"}return""}function _doCall(e,t){var n=_globals[t];n?n(e):console.error("No call for id",t)}var _ruleCtrl=null,_globals={};$(document).ready(function(){_ruleCtrl=new RuleController;_ruleCtrl.fetchRules()});var Rule=Base.extend({name:"",description:"",constructor:function(e){this.id="id"in e?e.id:"";this.name="name"in e?e.name:"";this.description="description"in e?e.description:""},run:function(e){var t=this,n=$(e);n.text("Running...").attr("disabled",!0);$.ajax("rules/"+t.id+"/run_against/"+_record_id,{success:function(e){var t=n.parent().find(".rule_output").first();n.text("Check").removeAttr("disabled");if(0==e)t.is("*")?t.empty().html("<i>No match</i>"):alert("The rule did not match");else if(t.is("*")){t.empty().append("<h3>The rule did match</h3>").append("<pre/>");t.find("pre").first().text(e)}else alert("The rule did match")},error:function(e,r,i){alert("Failed to run rule "+t.name+": "+i);n.text("Try again").removeAttr("disabled")}})}}),RuleController=Base.extend({loaded:!1,rules:[],fetchRules:function(){var e=this;$.get("rules/",function(t){if(t){var n=[];for(var r=0;r<t.length;r++)n.push(new Rule(t[r]));e.rules=n;e.loaded=!0;e.showRules()}else{alert('Invalid response for "rules/"');console.log("rules",t)}},"json")},showRules:function(){$("#rules").html("templates/rules.ejs",{rules:this.rules})}});